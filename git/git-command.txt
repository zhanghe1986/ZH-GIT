Work direct to Local warehouse command:
1. Config user nam and e-mail address
$git config --global user.name "example"
$git config --global user.email example@gmail.com

2. Init the warehouse in a work direct
$git init

3. Clone target-warehouse to current direct
$git clone git://github.com/schacon/grit.git

4. Clone and re-name target-warehouse to current direct
$git clone git://github.com/schacon/grit.git mygrit

5. Check current status of direct in warehouse
$git status

6. Add file to work cache
$git add README.txt

7. Commit files to local warehouse from work cache
$git commit
$git commit -m "first commit"

8. Create a direct
$mkdir testgit

9. Create a file
$touch readme.txt

10、Display different content between current direct and local warehouse
$git diff

11. 查看已暂存的文件和上次提交时的快照之间的差异
$git diff --cached
$git diff --staged

12. Display whole directs and files of current direct in local warehouse
$git ls-files

13、从工作目录中删除文件并移出暂存区，如果目标文件已修改并已经暂存，需加-f参数
$git rm -f README

14、仅从跟踪清单中删除文件
$git rm --cached readme.txt

15、递归删除当前目录及其子目录中所有~结尾的文件
$git rm \*~

16、重命名文件并暂存
$git mv file_from file_to

17、查看提交历史
$git log
$git reflog

18、git log 参数含义
-p : 展开显示每次提交的内容差异
-2 : 仅显示最近的两次更新
--word-diff : 获取单词层面上的对比，在书籍、论文文件进行对比时非常有用
--stat : 仅显示简要的增改行数统计
--pretty : 指定格式展示提交历史, 例如：--pretty=oneline, --pretty=short, --pretty=full, --pretty=fuller, --pretty=format:"%h - %an, %ar : %s"
--since, --after : 仅显示指定时间之后的提交
--until, --before : 仅显示指定时间之前的提交
--author : 仅显示指定作者相关的提交
--committer : 仅显示指定提交者相关的提交

19、图形化界面查看提交历史
gitk

20、使用当前暂存区域覆盖最后一次提交
git commit --amend

21、取消已经暂存的文件
git reset HEAD benchmarks.rb

22、撤消工作区的修改
git checkout -- benchmarks.rb

23、回退到上一个版本
git reset --hard HEAD^

24、回退到某一版本
git reset --hard 8564333


Work direct - Local repository - Remote repository command:  (https://github.com/zhanghe1986/repository-name.git)
1. Clone remote repository into local repository and work direct(no git-init), then add/modify/delete files
$mkdir My-GitHub
$cd My-GitHub
$git clone git@github.com:"zhanghe1986"/"My-GitHub".git

$git add .
$git commit -m ""
$git push

2. Check out specific direct and file into local repository and work direct, then add/modify/delete files
$mkdir My-GitHub
$cd My-GitHub
$git init
$git remote add -f origin git@github.com:"zhanghe1986"/"My-GitHub"
$git config core.sparsecheckout true
$echo "libs" >> .git/info/sparse-checkout
$echo "git/git-command.txt" >> .git/info/sparse-checkout
$echo "git" >> .git/info/sparse-checkout
$git pull origin master
...
$git add .
$git commit -m ""
$git push --set-upstream origin master

